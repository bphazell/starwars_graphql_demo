extend schema
  @link(url: "https://specs.apollo.dev/federation/v2.0",
        import: ["@key", "@shareable", "@tag"])

    type Query {
        allStarships(page: Int = 1): shipsConnection!
        allVehicles(page: Int = 1): vehiclesConnection!
        #testStarships: [Starship]
        # allStarshipsAndVehicles(page: Int = 1): resultsList
        starship(id: ID!): Starship
        vehicle(id: ID!): Vehicle
    }

    interface Ride {
        name: String!
        model: String
        manufacturer: String @tag(name: "internal")
        cost_in_credits: String
        length: String
        max_atmosphering_speed: String
        crew: String
        passengers: String
        cargo_capacity: String
        consumables: String
    }

    type Starship implements Ride @key(fields: "id") {
        id: ID!
        name: String!
        model: String
        manufacturer: String
        cost_in_credits: String
        length: String
        max_atmosphering_speed: String
        crew: String
        passengers: String
        cargo_capacity: String
        consumables: String
        hyperdrive_rating: String
        films: [Film]
        pilots: [Person]
        starship_class: String
    }

    type Person @key(fields: "id", resolvable: false) {
        id: ID
    }

    type Vehicle implements Ride @key(fields: "id") {
        id: ID!
        name: String!
        model: String
        manufacturer: String
        cost_in_credits: String
        length: String
        max_atmosphering_speed: String
        crew: String
        passengers: String
        cargo_capacity: String
        consumables: String
        films: [Film]
        pilots: [Person]
        vehicle_class: String
    }

    type Film @key(fields: "id", resolvable: false)  {
        id: ID!
    }

    type PageInfo @shareable {
        count: Int!
        next: String
        previous: String
    }

    type shipsConnection {
        pageInfo: PageInfo
        nodes: [Starship!]!
    }

    type vehiclesConnection {
        pageInfo: PageInfo
        nodes: [Vehicle!]!
    }


