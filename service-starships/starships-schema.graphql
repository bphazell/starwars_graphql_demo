
    type Query {
        allStarships(page: Int = 1): shipsResultsList!
        allVehicles(page: Int = 1): vehiclesResultsList!
        starship(id: ID!): Starship
        vehicle(id: ID!): Vehicle
    }

    interface Ride {
        name: String!
        model: String
        manufacturer: String
        cost_in_credits: String
        length: String
        max_atmosphering_speed: String
        crew: String
        passengers: String
        cargo_capacity: String
        consumables: String
    }

    type Starship implements Ride {
        name: String!
        model: String
        manufacturer: String
        cost_in_credits: String
        length: String
        max_atmosphering_speed: String
        crew: String
        passengers: String
        cargo_capacity: String
        consumables: String
        hyperdrive_rating: String
        starship_class: String
    }

    type Vehicle implements Ride {
        name: String!
        model: String
        manufacturer: String
        cost_in_credits: String
        length: String
        max_atmosphering_speed: String
        crew: String
        passengers: String
        cargo_capacity: String
        consumables: String
        vehicle_class: String
    }

    interface resultsList {
        count: Int!
        next: String
        previous: String
    }

    type shipsResultsList implements resultsList {
        count: Int!
        next: String
        previous: String
        starships: [Starship!]!
    }

    type vehiclesResultsList implements resultsList {
        count: Int!
        next: String
        previous: String
        vehicles: [Vehicle!]!
    }


